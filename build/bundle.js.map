{"version":3,"sources":["webpack:///webpack/bootstrap 77fd4098bfc6dd7102a3","webpack:///./index.js","webpack:///./lib/rq.js","webpack:///./lib/eBus/eBus.js","webpack:///./lib/eBus/models/event.js","webpack:///./lib/eBus/models/listener.js","webpack:///./lib/eBus/logger.js","webpack:///./lib/eBus/tests/test1.js","webpack:///./lib/eBus/utils.js"],"names":["options","RQ","eBus","_eventListenerMap","Map","_eventTriggeredFlag","listenerPayload","Array","payloadObj","event","listenerObj","name","routine","context","has","get","push","set","log","listenerName","eventName","listenersList","updatedListnersList","listener","listenerUid","target","payload","executed","execute","apply","Event","validateConstructorParams","objUnderValidation","listenerSideEffectsRoutine","validationVerdict","error","Listener","listenerSideEffectRoutine","arguments","_listenerUid","_listenerSideEffectRoutine","_context","_executionCount","_executeOnce","once","_creationTimestamp","getCurrentTime","_target","_lastExecutionTimestamp","ErrorDisplay","message","Error","console","info","EBusInstance","addListener","trigger","temp","Date","getTime"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 77fd4098bfc6dd7102a3\n **/","import RQueue from './lib/rq';\n\n/**\n * options\n *\n */\nimport temp from './lib/eBus/tests/test1';\n\nexport default function (options) {\n    return new RQueue(options);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","\nimport EventBus from './eBus/eBus';\n\n/**\n *\n */\nclass RQ {\n\n    constructor() {\n\n    }\n\n    start () {\n\n    }\n\n    pause () {\n\n    }\n\n    exit () {\n\n    }\n}\n\nexport default RQ;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/rq.js\n **/","/**\n * eBus is a JavaScript Event Pub Sub Bus\n * - Entities can attach a listener to an event\n * - Entities can publish events\n * - Entities can listen to events that happened in the past\n */\n\nimport EventClass from './models/event';\nimport ListenerClass from './models/listener';\nimport Logger from './logger';\n\nclass eBus {\n    constructor(options) {\n        this._eventListenerMap = new Map();\n        this._eventTriggeredFlag = new Map();\n    }\n\n    /**\n     * Attaches a listener to the eBus\n     *\n     * @param listenerPayload {object} Payload which will be needed to attach a listener to the eBus\n     * listenerPayload : {\n     *      name : <string>[Required],\n     *      event : <string>[Required],\n     *      routine : <function> [Required],\n     *      context : <object> [Optional],\n     *      options : <object> [Optional]\n     * }\n     * options : {\n     *      once : <boolean>,\n     *      rememberPast: <boolean>,\n     *      throttle : <timestamp>,\n     *      target : <string>\n     * }\n     */\n    addListener(listenerPayload) {\n        if (!(listenerPayload instanceof Array)) {\n            listenerPayload = [listenerPayload];\n        }\n\n        for (let payloadObj of listenerPayload) {\n            let event = payloadObj.event;\n            let listenerObj = new ListenerClass(payloadObj.name, payloadObj.routine, payloadObj.context, payloadObj.options);\n\n            this._eventListenerMap.has(event) ? this._eventListenerMap.get(event).push(listenerObj) : this._eventListenerMap.set(event, [listenerObj]);\n            Logger.log(payloadObj.name, ' listener is attached with ', event);\n        }\n    }\n\n    /**\n     * Removes a listeners from the eBus\n     *\n     * @param listenerName {string}[Required] Uuid of the listner attaching context who want's to remove this listener.\n     * @param eventName {string}[Required] Name of the event that need not to be listened any more.\n     */\n    removeListener(listenerName, eventName) {\n        let listenersList = this._eventListenerMap.get(eventName);\n        let updatedListnersList = [];\n\n        for (let listener of listenersList) {\n            if (listener.listenerUid != listenerName) {\n                updatedListnersList.push(listener);\n            }\n        }\n        this._eventListenerMap.set(eventName, updatedListnersList);\n    }\n\n    /**\n     * Triggers an event on the eBus making all the sideEffects to be executed for such event\n     *\n     * @param event {string} [Required] Name of the event that is published\n     * @param target {string} [Optional] The Uuid of the publisher who is publishing the event.\n     * @param payload {Array} [Optional] The payload that the event publisher would want to be passed to all the side effects.\n     */\n    trigger(event, target, ...payload) {\n        let listenersList = this._eventListenerMap.get(event);\n        this._eventTriggeredFlag.set(event, {executed : true, payload : payload});\n        for (let listener of listenersList) {\n            listener.execute.apply(listener, [target, payload]);\n        }\n    }\n}\n\nexport default eBus;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/eBus.js\n **/","class Event {\n    constructor() {\n\n    }\n}\n\nexport default Event;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/models/event.js\n **/","import Logger from './../logger';\nimport Utils from '../utils';\n\nfunction validateConstructorParams(objUnderValidation) {\n    let listenerUid = objUnderValidation[0],\n        listenerSideEffectsRoutine = objUnderValidation[1],\n        validationVerdict = true;\n\n    if (!listenerUid) {\n        Logger.error('listenerUid is not found');\n        validationVerdict = false;\n    }\n\n    return validationVerdict;\n}\n\nclass Listener {\n\n    /**\n     *\n     * @param listenerUid\n     * @param listenerSideEffectRoutine\n     */\n    constructor(listenerUid, listenerSideEffectRoutine, context, options = {}) {\n        if (!validateConstructorParams(arguments)) {\n            return;\n        }\n\n        this._listenerUid = listenerUid;\n        this._listenerSideEffectRoutine = listenerSideEffectRoutine;\n        this._context = context;\n        this._executionCount = 0;\n        this._executeOnce = options.once ? true : false;\n        this._creationTimestamp = Utils.getCurrentTime();\n        this._target = options.target || void 0;\n        this._lastExecutionTimestamp = void 0;\n    }\n\n    /**\n     * Executes the listener side effect routine.\n     *\n     * @param target {string} represents the uuid of the entity publishing this event\n     * @param payload {object} The payload passed by the target which will be forwared to side effect routine\n     * as param\n     */\n    execute(target, payload) {\n        Logger.log(this._listenerUid + ' listener execution begins');\n        if(this._executeOnce && this._executionCount > 0) {\n            Logger.log(this._listenerUid , ' listener execution skipped..');\n            return void 0;\n        }\n\n        if(this._target!= void 0 && target != this._target){\n            Logger.log(this._listenerUid, ' listener execution skipped due to unmatching target');\n            return void 0;\n        }\n\n        this._lastExecutionTimestamp = Utils.getCurrentTime();\n        this._listenerSideEffectRoutine.apply(this._context, payload);\n        this._executionCount += 1;\n    }\n\n    /**\n     * Getter Function to retrieve UUid of the context which added the listener\n     *\n     * @returns {string} The UUid of the listener adding context\n     */\n    get listenerUid() {\n        return this._listenerUid;\n    }\n\n    /**\n     * Getter Function to retrieve the sideEffect routine attached by the context during listener creation.\n     *\n     * @returns {Function} Retruns the sideEffect routine attached by the context\n     */\n    get listenerSideEffectRoutine() {\n        return this._listenerSideEffectRoutine;\n    }\n\n}\n\nexport default Listener;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/models/listener.js\n **/","class ErrorDisplay {\n    constructor() {};\n\n    error(message) {\n        throw(new Error(message));\n    }\n\n    info(message) {\n        console.info(message);\n    }\n\n    log() {\n        console.log.apply(console.log, arguments);\n    }\n}\n\nexport default (function(){\n    return new ErrorDisplay;\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/logger.js\n **/","/**\n * Created by ankit.agrawal on 27/08/16.\n */\n\nimport EBus from '../eBus';\n\nconst EBusInstance = new EBus();\n\nEBusInstance.addListener({\n    name: '1',\n    event: 'First_Event',\n    routine: function () {\n        console.log('First Text Executed from First Listener for First Event');\n    },\n    options: {\n        target : 'First_Publisher',\n        once: true\n    }\n});\n\n// EBusInstance.addListener([{\n//     name: 'Second Listener',\n//     event: 'First_Event',\n//     routine: function (payload) {\n//         console.log(payload);\n//         console.log('First Text Executed from Second Listener for First Event');\n//     }\n// }, {\n//     name: 'Third Listener',\n//     event: 'First_Event',\n//     routine: function () {\n//         console.log('First Text Executed from Third Listener for First Event');\n//     }\n// }]);\n\n\nEBusInstance.trigger('First_Event', 'First_Publisher', {temp: 'temp'});\nEBusInstance.trigger('First_Event', 'First_Publisher', {temp: 'temp'});\n\n// EBusInstance.removeListener('First Listener', 'First_Event');\n//\n// EBusInstance.trigger('First_Event', 'First_Publisher', {temp: 'temp'});\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/tests/test1.js\n **/","export default {\n    getCurrentTime : () => {\n        return (new Date()).getTime();\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./lib/eBus/utils.js\n **/"],"sourceRoot":""}